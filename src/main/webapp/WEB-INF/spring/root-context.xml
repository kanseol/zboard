<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="url" value="jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:XE" />
		<property name="username" value="spring" />
		<property name="password" value="1234" />
	</bean>

	<!-- SqlSessionFactory : 설정 파일을 읽어들여 마이바티스에서 작업을 수행하는 SqlSession을 생성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/mapper/*.xml" />
		<property name="configLocation" value="classpath:/mybatis-config.xml" />
	</bean>

	<!-- SqlSessionTemplate : 마이바티스 스프링 연동 모듈을 사용해 트랜잭션 처리, open/close, 스레드 안정한 SqlSession 객체를 지원 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<mybatis-spring:scan base-package="com.icia.zboard3.dao" />

	<!-- csrf가 없을 경우 apaceh fileupload multipart 설정  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
		<property name="maxUploadSizePerFile" value="10485760" />
		<property name="maxInMemorySize" value="0" />
	</bean>
	-->
	
	<!-- csrf가 있을 경우 web.xml에 필터를 설정하고 이곳도 바뀐다 -->
	<bean id="filterMultipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <property name="maxUploadSize" value="1048576" />
         <property name="maxUploadSizePerFile" value="10485760" />
		<property name="maxInMemorySize" value="0" />
	</bean>
	
	
	<!-- 자바메일을 지원하는 스프링 메일 설정 -->
	<!-- 메일을 발송하려면 SMTP 서버가 필요. 서버가 없기 때문에 gmail에 메일을 전달하면 gmail이 메일 발송  -->
	<!-- 문제점 : 메일 발송이 실패하면 우리는 알 수가 없다 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="username" value="당신의 아이디" />
		<property name="password" value="당신의 메일" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.host">smtp.gmail.com</prop>
				<prop key="mail.smtp.port">465</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.socketFactory.port">465</prop>
				<prop key="mail.smtp.socketFactory.fallback">false</prop>
				<prop key="mail.smtp.auth">true</prop> 
				<prop key="mail.smtp.timeout">8500</prop>
				<!-- log를 보고 싶다면 true. false로 하면 메일 관련 메시지가 나오지 않는다 -->
				<prop key="mail.debug">true</prop>	
			</props>
		</property>
	</bean>	

	<bean id="dateFormatter" class="java.time.format.DateTimeFormatter" factory-method="ofPattern">
		<constructor-arg value="yyyy-MM-dd" />
	</bean>
	
	<bean id="timeFormatter" class="java.time.format.DateTimeFormatter" factory-method="ofPattern">
		<constructor-arg value="yyyy-MM-dd HH:mm:ss" />
	</bean>
	
	<bean id="modelMapper" class="org.modelmapper.ModelMapper" />	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
	
	<!-- Controller를 제외한 컴포넌트 스캔 실행 : 뒤에 따라오는 security-config.xml에서 빈을 사용할 수 있도록 -->
	<context:component-scan base-package="com.icia.zboard3">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
</beans>


